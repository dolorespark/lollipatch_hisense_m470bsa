From 273d608e897670c85389db39720e9f0899657e9a Mon Sep 17 00:00:00 2001
From: c457 <android.c357@gmail.com>
Date: Sat, 31 Jan 2015 02:49:35 -0600
Subject: [PATCH] tinyalsa: Forward port undocumented change

Change-Id: I948513807941f0e81b57d113a2f40710889525a0
---
 include/tinyalsa/asoundlib.h |    2 ++
 mixer.c                      |   56 ++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+)

diff --git a/include/tinyalsa/asoundlib.h b/include/tinyalsa/asoundlib.h
index 010d7bb..f7f56df 100644
--- a/include/tinyalsa/asoundlib.h
+++ b/include/tinyalsa/asoundlib.h
@@ -287,9 +287,11 @@ int mixer_ctl_set_percent(struct mixer_ctl *ctl, unsigned int id, int percent);
 
 int mixer_ctl_get_value(struct mixer_ctl *ctl, unsigned int id);
 int mixer_ctl_get_array(struct mixer_ctl *ctl, void *array, size_t count);
+int mixer_ctl_get_iec958(struct mixer_ctl *ctl, void *pData, unsigned int id);
 int mixer_ctl_set_value(struct mixer_ctl *ctl, unsigned int id, int value);
 int mixer_ctl_set_array(struct mixer_ctl *ctl, const void *array, size_t count);
 int mixer_ctl_set_enum_by_string(struct mixer_ctl *ctl, const char *string);
+int mixer_ctl_set_iec958(struct mixer_ctl *ctl, void *pData, unsigned int id);
 
 /* Determe range of integer mixer controls */
 int mixer_ctl_get_range_min(struct mixer_ctl *ctl);
diff --git a/mixer.c b/mixer.c
index 54d826e..fa3f5a7 100644
--- a/mixer.c
+++ b/mixer.c
@@ -369,6 +369,62 @@ int mixer_ctl_get_array(struct mixer_ctl *ctl, void *array, size_t count)
     return 0;
 }
 
+int mixer_ctl_get_iec958(struct mixer_ctl *ctl, void *pData, unsigned int id)
+{
+    struct snd_ctl_elem_value ev;
+    int ret;
+
+    if (!ctl || (id >= ctl->info->count))
+        return -EINVAL;
+
+    memset(&ev, 0, sizeof(ev));
+    ev.id.numid = ctl->info->id.numid;
+    ret = ioctl(ctl->mixer->fd, SNDRV_CTL_IOCTL_ELEM_READ, &ev);
+    if (ret < 0)
+        return ret;
+
+    switch (ctl->info->type) {
+    case SNDRV_CTL_ELEM_TYPE_IEC958:
+        if (pData != NULL) {
+            memcpy(pData, &ev.value.iec958, sizeof(ev.value.iec958));
+        }
+        return 0;
+
+    default:
+        return -EINVAL;
+    }
+
+    return 0;
+}
+
+int mixer_ctl_set_iec958(struct mixer_ctl *ctl, void *pData, unsigned int id)
+{
+    struct snd_ctl_elem_value ev;
+    int ret;
+
+    if (!ctl || (id >= ctl->info->count))
+        return -EINVAL;
+
+    memset(&ev, 0, sizeof(ev));
+    ev.id.numid = ctl->info->id.numid;
+    ret = ioctl(ctl->mixer->fd, SNDRV_CTL_IOCTL_ELEM_READ, &ev);
+    if (ret < 0)
+        return ret;
+
+    switch (ctl->info->type) {
+    case SNDRV_CTL_ELEM_TYPE_IEC958:
+        if (pData != NULL) {
+            memcpy(&ev.value.iec958, pData, sizeof(ev.value.iec958));
+        }
+        break;
+
+    default:
+        return -EINVAL;
+    }
+
+    return ioctl(ctl->mixer->fd, SNDRV_CTL_IOCTL_ELEM_WRITE, &ev);
+}
+
 int mixer_ctl_set_value(struct mixer_ctl *ctl, unsigned int id, int value)
 {
     struct snd_ctl_elem_value ev;
-- 
1.7.9.5

