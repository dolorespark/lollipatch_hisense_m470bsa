From c22bd2f89360f66d9c2cb6bd4ad4b8a682b6ef1a Mon Sep 17 00:00:00 2001
From: Evisceration <eviscerationls@gmail.com>
Date: Mon, 22 Dec 2014 23:46:58 +0100
Subject: [PATCH] services: fix memory leak in ColorFade

original patch from
   https://code.google.com/p/android/issues/detail?id=79729#c177

i can not get the email to add proper authorship, but all credits belong
to this person

Change-Id: Ica9a4ae02cd3c8435f46dd9c3bfdb52317f9a7ef
---
 services/core/java/com/android/server/display/ColorFade.java | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/display/ColorFade.java b/services/core/java/com/android/server/display/ColorFade.java
index 6e61e41..fba7463 100644
--- a/services/core/java/com/android/server/display/ColorFade.java
+++ b/services/core/java/com/android/server/display/ColorFade.java
@@ -450,6 +450,7 @@ final class ColorFade {
         if (!attachEglContext()) {
             return false;
         }
+        SurfaceTexture st = null;
         try {
             if (!mTexNamesGenerated) {
                 GLES20.glGenTextures(1, mTexNames, 0);
@@ -459,7 +460,7 @@ final class ColorFade {
                 mTexNamesGenerated = true;
             }
 
-            final SurfaceTexture st = new SurfaceTexture(mTexNames[0]);
+            st = new SurfaceTexture(mTexNames[0]);
             final Surface s = new Surface(st);
             try {
                 SurfaceControl.screenshot(SurfaceControl.getBuiltInDisplay(
@@ -483,6 +484,8 @@ final class ColorFade {
             GLES20.glViewport(0, 0, mDisplayWidth, mDisplayHeight);
             ortho(0, mDisplayWidth, 0, mDisplayHeight, -1, 1);
         } finally {
+            if (st != null)
+                st.release();
             detachEglContext();
         }
         return true;
-- 
1.9.1

